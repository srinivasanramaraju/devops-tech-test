- name: Provision an EC2 Instance
  hosts: localhost
  connection: localhost
  gather_facts: False
  tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
  vars:
    instance_type: t2.micro
    security_group: Foresee-webserver
    image: ami-ae7bfdb8
    region: us-east-1
    project_name: Foresee Devops
    count: 1

    # Task that will be used to Launch/Create an EC2 Instance
  tasks:
    - name: Create a security group
      local_action:
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Create an EC2 key
      ec2_key:
        name: "{{ project_name }}-key"
        region: "{{ region }}"
      register: ec2_key

    - name: Launch the new EC2 Instance
      ec2:
         key_name: "Foresee-ec2-keys"
         group: "{{ security_group }}"
         instance_type: t2.micro
         image: "{{ image }}"
         wait: true
         exact_count: 1
         region: "{{ region }}"
         count_tag:
            Name: Demo
         instance_tags:
            Name: Demo
      register: ec2_provision_result

    - name: save IP to inventory file
      copy:
        content: "[webservers]{{'\n'}}{{ item.public_ip }}"
        dest: "~/.ansible/hosts"
      with_items: "{{ ec2_provision_result.instances }}"

    - name: Add IP to ec2_hosts group
      add_host:
        hostname: "{{ item.public_ip }}"
        groups: ec2_hosts
      with_items: "{{ ec2_provision_result.instances }}"

    - name: Wait for SSH to come up
      local_action: wait_for
                    host={{ item.public_ip }}
                    port=22
                    state=started
      with_items: "{{ec2_provision_result.instances }}"

    - name: Add tag to Instance(s)
      local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
      with_items: "{{ ec2_provision_result.instances }}"
      args:
        tags:
          Name: webserver
